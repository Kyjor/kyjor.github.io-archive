{"version":3,"sources":["webpack:///./src/components/BlogPostList.js","webpack:///./src/pages/blog.js"],"names":["SectionStyles","styled","section","FlexContainerStyles","div","FlexItemStyles","img","SinglePost","post","style","backgroundColor","padding","margin","to","slug","current","title","date","description","PostSection","BlogPostList","posts","map","key","id","pageQuery","BlogPage","data","nodes","SEO"],"mappings":"6LAMMA,G,UAAgBC,IAAOC,QAAV,kFAAGD,CAAH,sGAObE,EAAsBF,IAAOG,IAAV,wFAAGH,CAAH,gHASnBI,EAAiBJ,IAAOG,IAAV,mFAAGH,CAAH,4GAWIA,IAAOK,IAAV,oFAAGL,CAAH,6BAIEA,IAAOG,IAAV,mFAAGH,CAAH,uHAODA,IAAOG,IAAV,+EAAGH,CAAH,uKAahB,SAASM,EAAT,GAA+B,IAATC,EAAQ,EAARA,KAClB,OAGA,yBAAKC,MAAO,CAACC,gBAAiB,UAAWC,QAAS,OAAQC,OAAQ,WAC9D,kBAAC,IAAD,CAAMC,GAAE,SAAWL,EAAKM,KAAKC,SAAW,4BAAKP,EAAKQ,QACpD,+BAAQR,EAAKS,MACb,2BAAIT,EAAKU,cAMf,SAASC,EAAT,GAA8B,IAARX,EAAO,EAAPA,KAElB,OACI,kBAACR,EAAD,KACI,kBAACG,EAAD,KACI,kBAACE,EAAD,KACI,kBAACE,EAAD,CAAaC,KAAMA,OAUxB,SAASY,EAAT,GAAkC,IAAVC,EAAS,EAATA,MAEnC,OAEA,oCACCA,EAAMC,KAAI,SAACd,GAAD,OACP,kBAACW,EAAD,CAAcI,IAAKf,EAAKgB,GAAIhB,KAAMA,Q,0BCtE7BiB,GAFEC,UAdE,SAAC,GAAc,IACxBL,EADuB,EAAXM,KACCN,MAAMO,MACzB,OACE,oCACA,kBAACC,EAAA,EAAD,CAAKb,MAAK,SACF,8CACA,kBAACI,EAAD,CAAcC,MAAOA,MAUX","file":"component---src-pages-blog-js-4f850fd3cae591511d3b.js","sourcesContent":["import { graphql, Link } from 'gatsby';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport GatsbyImage from 'gatsby-image';\r\n\r\n\r\nconst SectionStyles = styled.section`\r\n    margin-left: -.75rem;\r\n    margin-right: -.75rem;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    margin-bottom: 20px;\r\n`;\r\nconst FlexContainerStyles = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    \r\n`;\r\nconst FlexItemStyles = styled.div`\r\n    flex-grow: 1;\r\n    padding-left: 3%;\r\n    padding-right: 3%;\r\n    padding-top: 1%;\r\n    padding-bottom: 1%;\r\n    width: 50%;\r\n    font-size: 2vw;\r\n    \r\n`;\r\n\r\nconst FlexImageStyles = styled.img`\r\n     width: 100%;\r\n    height: 100%;\r\n`;\r\nconst PostGridStyles = styled.div `\r\n    display: grid;\r\n    grid-template-columns: repeat()(auto-fill, minmax(300px, 1fr));\r\n    gap: 4rem;\r\n    grid-auto-rows: auto auto 500px;\r\n`;\r\n\r\nconst PostStyles = styled.div`\r\n    display: grid;\r\n    @supports not(grid-template-row: subgrid){\r\n        --rows: auto auto 1fr;\r\n    }\r\n    grid-template-rows: var(--rows, subgrid);\r\n    grid-area: span 3;\r\n    grid-gap: 1rem;\r\n    h2,\r\n    p{\r\n        margin: 0;\r\n    }\r\n`;\r\nfunction SinglePost({ post }) {\r\n    return (\r\n       \r\n            \r\n    <div style={{backgroundColor: '#454343', padding: '20px', margin: '20px 0'}}>\r\n        <Link to={`/blog/${post.slug.current}`}><h2>{post.title}</h2></Link>\r\n      <small>{post.date}</small>\r\n      <p>{post.description}</p>\r\n    </div>\r\n    \r\n    )\r\n}\r\n\r\nfunction PostSection({post}) {\r\n\r\n    return (\r\n        <SectionStyles>\r\n            <FlexContainerStyles>\r\n                <FlexItemStyles>\r\n                    <SinglePost  post={post}/>\r\n                </FlexItemStyles>\r\n                {/* <FlexItemStyles>\r\n                    <GatsbyImage fluid={post.image.asset.fluid} alt={post.name}/>\r\n                </FlexItemStyles> */}\r\n            </FlexContainerStyles>\r\n        </SectionStyles>\r\n    )\r\n\r\n}\r\nexport default function BlogPostList({ posts }) {\r\n    \r\n    return(\r\n        \r\n    <>\r\n    {posts.map((post) => (\r\n        <PostSection  key={post.id} post={post}/>\r\n                )\r\n                )}\r\n    </>   \r\n    \r\n                \r\n               \r\n                \r\n            \r\n    \r\n  );\r\n  }\r\n\r\n","import React from \"react\"\r\nimport BlogPostList from \"../components/BlogPostList\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/SEO\"\r\n\r\n\r\nconst BlogPage = ({ data }) => {\r\n  const posts = data.posts.nodes;\r\n  return (\r\n    <>\r\n    <SEO title={`Blog`}/>\r\n            <h1>My blog posts:</h1>\r\n            <BlogPostList posts={posts}/>\r\n    </>\r\n    \r\n\r\n    \r\n  )\r\n}\r\n\r\nexport default BlogPage\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n  posts: allSanityPost(sort: {fields: date, order: ASC}) {\r\n    nodes {\r\n      slug {\r\n        current\r\n      }\r\n      id\r\n      description\r\n      date(formatString: \"DD MMMM YY\")\r\n      title\r\n      _rawContent(resolveReferences: {maxDepth: 10})\r\n    }\r\n  }\r\n}\r\n`"],"sourceRoot":""}